name: build
description: Build xrpld and libraries
inputs:
  generator:
    description: CMake generator to pass to the build
    default: ""
  configuration:
    description: Release or Debug build
    required: true
  cmake-args:
    description: Additional arguments to pass to CMake e.g. ??
    default: ""
  cmake-target:
    description: The CMake target to build i.e. <do we have any others?>
    default: all
# An implicit input is the environment variable `build_dir` defined in the workflow.
runs:
  using: composite
  steps:
    - name: configure
      shell: bash
      run: |
        cd ${build_dir}
        cmake \
          ${{ inputs.generator && format('-G "{0}"', inputs.generator) || '' }} \
          -DCMAKE_TOOLCHAIN_FILE:FILEPATH=build/generators/conan_toolchain.cmake \
          -DCMAKE_BUILD_TYPE=${{ inputs.configuration }} \
          -Dtests=TRUE \
          -Dxrpld=TRUE \
          -Dvalidator_keys=TRUE \
          ${{ inputs.cmake-args }} \
          ..
    - name: build
      shell: bash
      run: |
        echo "cool"
        # cmake \
        #   --build ${build_dir} \
        #   --config ${{ inputs.configuration }} \
        #   --parallel ${NUM_PROCESSORS:-$(nproc)} \
        #   --target ${{ inputs.cmake-target }}
    - name: build_packages
      if: ${{ matrix.configuration.platform }}-${{ matrix.configuration.compiler }}-${{ matrix.configuration.configuration }} == 'linux-gcc-Release'
      shell: bash
      run: |
        apt-get update && apt-get install -y \
          ca-certificates \
          curl \
          gpg \
          jq \
          rpm \
          python-is-python3 \
          python3-pip \
          vim
        cmake \
          --build ${build_dir} \
          --config ${{ inputs.configuration }} \
          --parallel ${NUM_PROCESSORS:-$(nproc)} \
          --target validator-keys
        cd ${build_dir}
        cpack -G DEB
        cpack -G RPM
